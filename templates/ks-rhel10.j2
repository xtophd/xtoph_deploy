##
## Kickstart
##   Name: {{ xtoph_deploy.kickstart_profile.name }}
##   Description: {{ xtoph_deploy.kickstart_profile.description }}
##   Template: {{ xtoph_deploy.kickstart_profile.template }}
##   Disk device = {{ p_diskDevice }}
##

lang en_US
keyboard us
#timezone America/New_York --isUtc
timezone America/New_York 
rootpw {{ p_rootpw }} --iscrypted
reboot
text
bootloader --location=mbr --append="nofb quiet splash=quiet {{ xtoph_deploy.machine_profile.kickstart.kernel_opts }}"

{%if xtoph_deploy.kickstart_profile.netcfg_override == "static" %}
## Override kernel level network args with a static kickstart config
network --bootproto=static --device={{ xtoph_deploy.machine_profile.kickstart.netdev }} --ip={{ xtoph_deploy.machine_profile.network.default.ip }} --netmask={{ xtoph_deploy.machine_profile.network.default.netmask }} --gateway={{ xtoph_deploy.machine_profile.network.default.gateway }} --nameserver={{ xtoph_deploy.machine_profile.network.default.nameserver }} --hostname={{ xtoph_deploy.hostname }}
{% endif %}

{% for key in xtoph_deploy.kickstart_profile.repos %}
repo --name={{ xtoph_deploy['kickstart_profile']['repos'][key].name }} --baseurl={{ xtoph_deploy.deployhost.repos.url }}/{{ xtoph_deploy.kickstart_profile.mnt }}{{ xtoph_deploy['kickstart_profile']['repos'][key].subpath }}
{% endfor %}

{%if p_ssh_key is defined and p_ssh_key|length %}
## Authorized SSH Key
sshkey --username=root "{{ p_ssh_key }}"
{% endif %}

## *** WARNING ***
## *** WARNING ***
## *** WARNING ***
##
##     A RHEL7 host can NOT  mount a RHEL8/RHEL9 XFS filesystem. This
##     affects our ability to use libguestfs on RHEL 7 to mount 
##     and customize a VM.
##
##     So we choose ext4 as the most compatible filesystems for
##     our specific use case.
## 
## *** WARNING ***
## *** WARNING ***
## *** WARNING ***

zerombr
clearpart --drives={{ p_diskDevice }} --all --initlabel
autopart --type=lvm

#part /boot --fstype=biosboot --size=512 --ondisk={{ p_diskDevice }} --asprimary
#part /boot/efi --fstype=efi --size=512 --ondisk={{ p_diskDevice }} --asprimary
#part pv.01 --size=16000 --grow --ondisk={{ p_diskDevice }} --asprimary
#volgroup vg_rhel pv.01
#logvol /     --fstype=ext4  --vgname=vg_rhel --name=root   --size=6000 --grow
#logvol /tmp  --fstype=ext4  --vgname=vg_rhel --name=tmp    --size=2000
#logvol swap  --fstype=swap  --vgname=vg_rhel --name=swap01 --size=2000

#authselect --passalgo=sha512 --useshadow

selinux --enforcing
firewall --enabled
skipx
firstboot --disable

%packages
@Core
ansible-core
git
#cloud-init
%end

########################################
##
## Post Install
##

%post

##- Preserve kernel kickstart args
cat /proc/cmdline >> /root/anaconda-cmdline.txt

##- Install software that was not available from the local DVD repo
dnf install -y git

%end

########################################
##
## How to end installation (shutdown, reboot, halt)
##

{% if (xtoph_deploy.kickstart_profile.wait_for_shutdown) %}
shutdown 
{% else %}
reboot
{% endif %}
