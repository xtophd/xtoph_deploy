## Authors: 
##   Christoph Doerbeck
##
## Summary:
##



##
##
##



- delegate_to: localhost
  block:

      ##
      ##    NOTE: All tasks here are blocked and delegated to execute
      ##          on the deployhost/localhost when deploy_node = true
      ##


    
      ##
      ##    Create MAC addresses if not already configured
      ##    and store it in the ../config/host_vars directory
      ##

      - name: "ovirt-deploy-preprocess : create host_vars dir"
        file: path="{{ lookup('env','PWD') }}/config/host_vars" state=directory
   
      - name: "ovirt-deploy-preprocess : create host_vars file"
        file: path="{{ lookup('env','PWD') }}/config/host_vars/{{ inventory_hostname }}" state=touch
    
      - name: "ovirt-deploy-preprocess : generate random MAC "
        script: macgen.py
        register: macgen_output
        when: h_pubMAC is undefined
    
      - name: "ovirt-deploy-preprocess : store random MAC in host_vars"
        lineinfile:
          dest:   "{{ lookup('env', 'PWD') }}/config/host_vars/{{ inventory_hostname }}"
          line:   "h_pubMAC: '{{ macgen_output.stdout }}'"
          state:  present
        when: h_pubMAC is undefined
        register: makeupmac
    
      - name: "ovirt-deploy-preprocess : set fact to preserve MAC for this run"
        set_fact:
          h_pubMAC: '{{ macgen_output.stdout }}'
        when: makeupmac.changed

      - name: "ovirt-deploy-preprocess: ensure dictionary is rebuilt with the new MAC (_xtoph_deploy_dict_processed = false)"
        set_fact:
          _xtoph_deploy_dict_processed: false
        when: makeupmac.changed



      ##
      ##    One exception to never touch xtoph_deploy outside of main.yml
      ##    is the handling of h_pubMAC which may be calculated during preprocess
      ##    and now needs to be amended into xtoph_deploy dictionary
      ##

      - name: "libvirt-deploy-preprocess : special handling for generated mac addresses"
        set_fact:
          xtoph_deploy: "{{ xtoph_deploy | combine( {'machine_profile': {'network': {'default': {'mac': h_pubMAC}}}}, recursive=True ) }}"
        when:
          - h_pubMAC is defined
          - h_pubMAC|length >= 0
          - xtoph_deploy.machine_profile.network.default.mac|length == 0



      ##
      ##    Log in to the oVIRT API service
      ##
      ##    NOTE: username and password should be in
      ##          the encrypted credentials.yml file
      ##
      ##    NOTE: to avoid concurrency problems with
      ##          hitting the api at scale, we
      ##          set 'throttle = 1'
      ##
  
      - name: "ovirt-deploy-preprocess : Login to oVirt"
        throttle: 1
        ovirt_auth:
          hostname: "{{ xtoph_deploy.platform_profile.api.fqdn }}"
          #ca_file:  "{{ xtoph_deploy.platform_profile.engine_cafile | default(omit) }}"
          insecure: "{{ xtoph_deploy.platform_profile.insecure |  default(true) }}"
          username: "{{ t_uid }}"
          password: "{{ t_pw  }}"
          state:    present
        vars:
          t_uid: "{{ ovirt_credentials[xtoph_deploy.selected_profile.platform]['username'] | default(ovirt_credentials['default']['username']) }}"
          t_pw:  "{{ ovirt_credentials[xtoph_deploy.selected_profile.platform]['password'] | default(ovirt_credentials['default']['password']) }}"
  
  
  
      ##
      ##    Determine state of the vm
      ##
  
      - name: "ovirt-deploy-preprocess : determine state of vm"
        ovirt_vm_info:
          pattern: name="{{ xtoph_deploy.platform_profile.vm.name }}" cluster="{{ xtoph_deploy.platform_profile.cluster_name }}"
          auth: "{{ ovirt_auth }}"
        register: vminfo_result
        ignore_errors: true
  
      - name: "ovirt-deploy-preprocess : DEBUG vm status/info results"
        debug: var=vminfo_result
        when: xtoph_deploy.debug == true
  
  
  
      ##
      ##    If the node is absent OR node NOT up,
      ##    then set_fact to deploy the node
      ##
  
      - set_fact:
          deploy_node: false
  
      - set_fact:
          deploy_node: true
        when: vminfo_result.ovirt_vms|length == 0
  
      - set_fact:
          deploy_node: true
        when:
          - vminfo_result.ovirt_vms[0].status is defined
          - vminfo_result.ovirt_vms[0].status != "up"
  
      - name:  "ovirt-deploy-preprocess : DEBUG vm status/info results"
        debug:
          msg: "deploy_node = {{ deploy_node }}"
        when: xtoph_deploy.debug == true



      ##
      ##    Log out of the oVIRT API service
      ##

      - name: Logout from oVirt
        throttle: 1
        ovirt_auth:
          state: absent
          ovirt_auth: "{{ ovirt_auth }}"

